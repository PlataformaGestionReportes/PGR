/**
 */
package gestionmodelosconsultas.sysinfo.people.provider;

import gestionmodelosconsultas.sysinfo.people.util.PeopleAdapterFactory;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class PeopleItemProviderAdapterFactory extends PeopleAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public PeopleItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link gestionmodelosconsultas.sysinfo.people.People_View} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected People_ViewItemProvider people_ViewItemProvider;

	/**
	 * This creates an adapter for a {@link gestionmodelosconsultas.sysinfo.people.People_View}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPeople_ViewAdapter() {
		if (people_ViewItemProvider == null) {
			people_ViewItemProvider = new People_ViewItemProvider(this);
		}

		return people_ViewItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link gestionmodelosconsultas.sysinfo.people.UnidadOrganizacional} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnidadOrganizacionalItemProvider unidadOrganizacionalItemProvider;

	/**
	 * This creates an adapter for a {@link gestionmodelosconsultas.sysinfo.people.UnidadOrganizacional}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUnidadOrganizacionalAdapter() {
		if (unidadOrganizacionalItemProvider == null) {
			unidadOrganizacionalItemProvider = new UnidadOrganizacionalItemProvider(this);
		}

		return unidadOrganizacionalItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link gestionmodelosconsultas.sysinfo.people.Rol} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RolItemProvider rolItemProvider;

	/**
	 * This creates an adapter for a {@link gestionmodelosconsultas.sysinfo.people.Rol}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRolAdapter() {
		if (rolItemProvider == null) {
			rolItemProvider = new RolItemProvider(this);
		}

		return rolItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link gestionmodelosconsultas.sysinfo.people.Contacto} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ContactoItemProvider contactoItemProvider;

	/**
	 * This creates an adapter for a {@link gestionmodelosconsultas.sysinfo.people.Contacto}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createContactoAdapter() {
		if (contactoItemProvider == null) {
			contactoItemProvider = new ContactoItemProvider(this);
		}

		return contactoItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link gestionmodelosconsultas.sysinfo.people.Directorio} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DirectorioItemProvider directorioItemProvider;

	/**
	 * This creates an adapter for a {@link gestionmodelosconsultas.sysinfo.people.Directorio}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDirectorioAdapter() {
		if (directorioItemProvider == null) {
			directorioItemProvider = new DirectorioItemProvider(this);
		}

		return directorioItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link gestionmodelosconsultas.sysinfo.people.Organizacion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OrganizacionItemProvider organizacionItemProvider;

	/**
	 * This creates an adapter for a {@link gestionmodelosconsultas.sysinfo.people.Organizacion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOrganizacionAdapter() {
		if (organizacionItemProvider == null) {
			organizacionItemProvider = new OrganizacionItemProvider(this);
		}

		return organizacionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link gestionmodelosconsultas.sysinfo.people.Actor} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ActorItemProvider actorItemProvider;

	/**
	 * This creates an adapter for a {@link gestionmodelosconsultas.sysinfo.people.Actor}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createActorAdapter() {
		if (actorItemProvider == null) {
			actorItemProvider = new ActorItemProvider(this);
		}

		return actorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link gestionmodelosconsultas.sysinfo.people.Quien} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected QuienItemProvider quienItemProvider;

	/**
	 * This creates an adapter for a {@link gestionmodelosconsultas.sysinfo.people.Quien}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createQuienAdapter() {
		if (quienItemProvider == null) {
			quienItemProvider = new QuienItemProvider(this);
		}

		return quienItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link gestionmodelosconsultas.sysinfo.people.Actores} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ActoresItemProvider actoresItemProvider;

	/**
	 * This creates an adapter for a {@link gestionmodelosconsultas.sysinfo.people.Actores}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createActoresAdapter() {
		if (actoresItemProvider == null) {
			actoresItemProvider = new ActoresItemProvider(this);
		}

		return actoresItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link gestionmodelosconsultas.sysinfo.people.Roles} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RolesItemProvider rolesItemProvider;

	/**
	 * This creates an adapter for a {@link gestionmodelosconsultas.sysinfo.people.Roles}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRolesAdapter() {
		if (rolesItemProvider == null) {
			rolesItemProvider = new RolesItemProvider(this);
		}

		return rolesItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (people_ViewItemProvider != null) people_ViewItemProvider.dispose();
		if (unidadOrganizacionalItemProvider != null) unidadOrganizacionalItemProvider.dispose();
		if (rolItemProvider != null) rolItemProvider.dispose();
		if (contactoItemProvider != null) contactoItemProvider.dispose();
		if (directorioItemProvider != null) directorioItemProvider.dispose();
		if (organizacionItemProvider != null) organizacionItemProvider.dispose();
		if (actorItemProvider != null) actorItemProvider.dispose();
		if (quienItemProvider != null) quienItemProvider.dispose();
		if (actoresItemProvider != null) actoresItemProvider.dispose();
		if (rolesItemProvider != null) rolesItemProvider.dispose();
	}

}
