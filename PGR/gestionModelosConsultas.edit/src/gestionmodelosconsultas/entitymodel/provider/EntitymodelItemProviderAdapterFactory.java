/**
 */
package gestionmodelosconsultas.entitymodel.provider;

import gestionmodelosconsultas.entitymodel.util.EntitymodelAdapterFactory;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class EntitymodelItemProviderAdapterFactory extends EntitymodelAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EntitymodelItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link gestionmodelosconsultas.entitymodel.Entity} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EntityItemProvider entityItemProvider;

	/**
	 * This creates an adapter for a {@link gestionmodelosconsultas.entitymodel.Entity}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEntityAdapter() {
		if (entityItemProvider == null) {
			entityItemProvider = new EntityItemProvider(this);
		}

		return entityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link gestionmodelosconsultas.entitymodel.EntityRelation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EntityRelationItemProvider entityRelationItemProvider;

	/**
	 * This creates an adapter for a {@link gestionmodelosconsultas.entitymodel.EntityRelation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEntityRelationAdapter() {
		if (entityRelationItemProvider == null) {
			entityRelationItemProvider = new EntityRelationItemProvider(this);
		}

		return entityRelationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link gestionmodelosconsultas.entitymodel.SimpleRelation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SimpleRelationItemProvider simpleRelationItemProvider;

	/**
	 * This creates an adapter for a {@link gestionmodelosconsultas.entitymodel.SimpleRelation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSimpleRelationAdapter() {
		if (simpleRelationItemProvider == null) {
			simpleRelationItemProvider = new SimpleRelationItemProvider(this);
		}

		return simpleRelationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link gestionmodelosconsultas.entitymodel.AssociativeEntity} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AssociativeEntityItemProvider associativeEntityItemProvider;

	/**
	 * This creates an adapter for a {@link gestionmodelosconsultas.entitymodel.AssociativeEntity}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAssociativeEntityAdapter() {
		if (associativeEntityItemProvider == null) {
			associativeEntityItemProvider = new AssociativeEntityItemProvider(this);
		}

		return associativeEntityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link gestionmodelosconsultas.entitymodel.Attribute} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AttributeItemProvider attributeItemProvider;

	/**
	 * This creates an adapter for a {@link gestionmodelosconsultas.entitymodel.Attribute}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAttributeAdapter() {
		if (attributeItemProvider == null) {
			attributeItemProvider = new AttributeItemProvider(this);
		}

		return attributeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link gestionmodelosconsultas.entitymodel.DiagramEntity} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DiagramEntityItemProvider diagramEntityItemProvider;

	/**
	 * This creates an adapter for a {@link gestionmodelosconsultas.entitymodel.DiagramEntity}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDiagramEntityAdapter() {
		if (diagramEntityItemProvider == null) {
			diagramEntityItemProvider = new DiagramEntityItemProvider(this);
		}

		return diagramEntityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link gestionmodelosconsultas.entitymodel.RealizacionDiagramEntity} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RealizacionDiagramEntityItemProvider realizacionDiagramEntityItemProvider;

	/**
	 * This creates an adapter for a {@link gestionmodelosconsultas.entitymodel.RealizacionDiagramEntity}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRealizacionDiagramEntityAdapter() {
		if (realizacionDiagramEntityItemProvider == null) {
			realizacionDiagramEntityItemProvider = new RealizacionDiagramEntityItemProvider(this);
		}

		return realizacionDiagramEntityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link gestionmodelosconsultas.entitymodel.ElementoRealizacionDiagramEntity} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ElementoRealizacionDiagramEntityItemProvider elementoRealizacionDiagramEntityItemProvider;

	/**
	 * This creates an adapter for a {@link gestionmodelosconsultas.entitymodel.ElementoRealizacionDiagramEntity}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createElementoRealizacionDiagramEntityAdapter() {
		if (elementoRealizacionDiagramEntityItemProvider == null) {
			elementoRealizacionDiagramEntityItemProvider = new ElementoRealizacionDiagramEntityItemProvider(this);
		}

		return elementoRealizacionDiagramEntityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link gestionmodelosconsultas.entitymodel.ElementoRealizacionValueAttribute} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ElementoRealizacionValueAttributeItemProvider elementoRealizacionValueAttributeItemProvider;

	/**
	 * This creates an adapter for a {@link gestionmodelosconsultas.entitymodel.ElementoRealizacionValueAttribute}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createElementoRealizacionValueAttributeAdapter() {
		if (elementoRealizacionValueAttributeItemProvider == null) {
			elementoRealizacionValueAttributeItemProvider = new ElementoRealizacionValueAttributeItemProvider(this);
		}

		return elementoRealizacionValueAttributeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link gestionmodelosconsultas.entitymodel.ElementoRealizacionVisibleAttribute} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ElementoRealizacionVisibleAttributeItemProvider elementoRealizacionVisibleAttributeItemProvider;

	/**
	 * This creates an adapter for a {@link gestionmodelosconsultas.entitymodel.ElementoRealizacionVisibleAttribute}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createElementoRealizacionVisibleAttributeAdapter() {
		if (elementoRealizacionVisibleAttributeItemProvider == null) {
			elementoRealizacionVisibleAttributeItemProvider = new ElementoRealizacionVisibleAttributeItemProvider(this);
		}

		return elementoRealizacionVisibleAttributeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link gestionmodelosconsultas.entitymodel.Value} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ValueItemProvider valueItemProvider;

	/**
	 * This creates an adapter for a {@link gestionmodelosconsultas.entitymodel.Value}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createValueAdapter() {
		if (valueItemProvider == null) {
			valueItemProvider = new ValueItemProvider(this);
		}

		return valueItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (entityItemProvider != null) entityItemProvider.dispose();
		if (entityRelationItemProvider != null) entityRelationItemProvider.dispose();
		if (simpleRelationItemProvider != null) simpleRelationItemProvider.dispose();
		if (associativeEntityItemProvider != null) associativeEntityItemProvider.dispose();
		if (attributeItemProvider != null) attributeItemProvider.dispose();
		if (diagramEntityItemProvider != null) diagramEntityItemProvider.dispose();
		if (realizacionDiagramEntityItemProvider != null) realizacionDiagramEntityItemProvider.dispose();
		if (elementoRealizacionDiagramEntityItemProvider != null) elementoRealizacionDiagramEntityItemProvider.dispose();
		if (elementoRealizacionValueAttributeItemProvider != null) elementoRealizacionValueAttributeItemProvider.dispose();
		if (elementoRealizacionVisibleAttributeItemProvider != null) elementoRealizacionVisibleAttributeItemProvider.dispose();
		if (valueItemProvider != null) valueItemProvider.dispose();
	}

}
